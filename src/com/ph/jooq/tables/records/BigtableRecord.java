/**
 * This class is generated by jOOQ
 */
package com.ph.jooq.tables.records;


import com.ph.jooq.tables.Bigtable;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BigtableRecord extends TableRecordImpl<BigtableRecord> implements Record4<Integer, String, Integer, BigDecimal> {

	private static final long serialVersionUID = -1614314794;

	/**
	 * Setter for <code>public.bigtable.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.bigtable.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.bigtable.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.bigtable.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.bigtable.age</code>.
	 */
	public void setAge(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.bigtable.age</code>.
	 */
	public Integer getAge() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.bigtable.money</code>.
	 */
	public void setMoney(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.bigtable.money</code>.
	 */
	public BigDecimal getMoney() {
		return (BigDecimal) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, BigDecimal> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, BigDecimal> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Bigtable.BIGTABLE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Bigtable.BIGTABLE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Bigtable.BIGTABLE.AGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field4() {
		return Bigtable.BIGTABLE.MONEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getAge();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value4() {
		return getMoney();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigtableRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigtableRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigtableRecord value3(Integer value) {
		setAge(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigtableRecord value4(BigDecimal value) {
		setMoney(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigtableRecord values(Integer value1, String value2, Integer value3, BigDecimal value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BigtableRecord
	 */
	public BigtableRecord() {
		super(Bigtable.BIGTABLE);
	}

	/**
	 * Create a detached, initialised BigtableRecord
	 */
	public BigtableRecord(Integer id, String name, Integer age, BigDecimal money) {
		super(Bigtable.BIGTABLE);

		setValue(0, id);
		setValue(1, name);
		setValue(2, age);
		setValue(3, money);
	}
}
